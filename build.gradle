/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compileOnly project(':LogstashAPI')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    compile 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

String distFolderName = "${pluginId}-${version}"
File distFolder = new File(project.buildDir, "distributions/${distFolderName}")

task distCopyClasses(type: Copy, dependsOn: 'classes') {
    from new File(project.buildDir, "classes/java/main")
    into {
        new File(distFolder, 'classes')
    }
}

task distCopyDeps(type: Copy, dependsOn: 'jar') {
    //from configurations.runtime.allArtifacts.files
    from configurations.runtime
    into {
        new File(distFolder, 'lib')
    }
}

task distPluginProperties() {
    doLast {
        File pluginPropertiesFile = new File(distFolder, 'plugin.properties')
        Properties properties = new Properties()
        properties.setProperty('plugin.id', pluginId)
        properties.setProperty('plugin.version', version)
        properties.setProperty('plugin.class', pluginClass)
        properties.setProperty('plugin.provider', pluginProvider)
        pluginPropertiesFile.withWriter { properties.store(it, "Automatically Generated, Do Not Edit") }
    }
}

task distFolderBuild() {
    dependsOn distCopyClasses
    dependsOn distCopyDeps
    dependsOn distPluginProperties
}

task zip(type: Zip, dependsOn: distFolderBuild) {
    from distFolder
}

File devInstallFolder = new File("../logstash/vendor/java-plugins/${distFolderName}")

task rmOldDevInstall(type: Delete) {
    delete devInstallFolder
}

task devInstall(type: Copy, dependsOn: [distFolderBuild, rmOldDevInstall]) {
    from distFolder
    into devInstallFolder
}